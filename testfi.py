from ultralytics import YOLO
import cv2
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import load_model

# üìå Load m√¥ h√¨nh YOLO ƒë·ªÉ ph√°t hi·ªán khu√¥n m·∫∑t
yolo_model = YOLO(r"C:\Users\Admin\runs\detect\face_detection5\weights\best.pt")

# üìå Load m√¥ h√¨nh MobileNetV3 ƒë·ªÉ nh·∫≠n di·ªán ƒëi·ªÉm r·ªùi r·∫°c
keypoint_model = load_model("mobilenetv3_keypoints.h5")

# üü¢ Kh·ªüi ƒë·ªông webcam
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # üîç B∆∞·ªõc 1: Ph√°t hi·ªán khu√¥n m·∫∑t b·∫±ng YOLO
    results = yolo_model(frame, conf=0.5)

    for result in results:
        for box in result.boxes:
            x1, y1, x2, y2 = map(int, box.xyxy[0])
            face = frame[y1:y2, x1:x2]

            # Ch·ªâ ti·∫øp t·ª•c n·∫øu ph√°t hi·ªán khu√¥n m·∫∑t
            if face is not None and face.shape[0] > 0 and face.shape[1] > 0:
                # Resize v·ªÅ 224x224
                face_resized = cv2.resize(face, (224, 224))
                face_resized = np.expand_dims(face_resized, axis=0) / 255.0  # Chu·∫©n h√≥a

                # üîç B∆∞·ªõc 2: D·ª± ƒëo√°n ƒëi·ªÉm r·ªùi r·∫°c v·ªõi MobileNetV3
                keypoints = keypoint_model.predict(face_resized)[0]
                keypoints = keypoints.reshape(-1, 2)  # ƒê∆∞a v·ªÅ d·∫°ng (68,2)

                # Hi·ªÉn th·ªã ƒëi·ªÉm tr√™n khu√¥n m·∫∑t
                for (x, y) in keypoints:
                    x = int(x * (x2 - x1)) + x1
                    y = int(y * (y2 - y1)) + y1
                    cv2.circle(frame, (x, y), 2, (0, 255, 0), -1)  # V·∫Ω ƒëi·ªÉm xanh

            # V·∫Ω khung m·∫∑t l√™n ·∫£nh
            cv2.rectangle(frame, (x1, y1), (x2, y2), (255, 0, 0), 2)

    # üñ• Hi·ªÉn th·ªã video
    cv2.imshow("Face Detection & Keypoints", frame)

    # Nh·∫•n 'Q' ƒë·ªÉ tho√°t
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
