import os
import cv2
import numpy as np

# ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c
IMAGE_FOLDER = "dataset/images/train"
LABEL_FOLDER = "dataset/labels/train"

# K√≠ch th∆∞·ªõc ƒë·∫ßu v√†o y√™u c·∫ßu c·ªßa MobileNetV3 Small
IMAGE_SIZE = (224, 224)
NUM_KEYPOINTS = 136  # 68 ƒëi·ªÉm x 2 t·ªça ƒë·ªô

def fix_labels():
    image_files = [f for f in os.listdir(IMAGE_FOLDER) if f.endswith(('.jpg', '.png'))]
    total_fixed = 0

    for img_file in image_files:
        img_path = os.path.join(IMAGE_FOLDER, img_file)
        label_path = os.path.join(LABEL_FOLDER, img_file.replace('.jpg', '.txt').replace('.png', '.txt'))

        # Ki·ªÉm tra ·∫£nh c√≥ t·ªìn t·∫°i kh√¥ng
        image = cv2.imread(img_path)
        if image is None:
            print(f"‚ùå Kh√¥ng th·ªÉ ƒë·ªçc ·∫£nh: {img_file}")
            continue

        # Ki·ªÉm tra k√≠ch th∆∞·ªõc ·∫£nh
        h, w, c = image.shape
        if h < IMAGE_SIZE[0] or w < IMAGE_SIZE[1]:
            print(f"‚ö†Ô∏è ·∫¢nh {img_file} qu√° nh·ªè ({w}x{h}). C·∫ßn >= 224x224.")
            continue

        # Ki·ªÉm tra file nh√£n c√≥ t·ªìn t·∫°i kh√¥ng
        if not os.path.exists(label_path):
            print(f"‚ùå Kh√¥ng t√¨m th·∫•y file nh√£n cho: {img_file}")
            continue

        try:
            keypoints = np.loadtxt(label_path).flatten()
            num_points = keypoints.shape[0]

            if num_points < NUM_KEYPOINTS:
                print(f"üîß Nh√£n {label_path} thi·∫øu {NUM_KEYPOINTS - num_points} gi√° tr·ªã. ƒêang b·ªï sung...")
                keypoints = np.pad(keypoints, (0, NUM_KEYPOINTS - num_points), mode='constant', constant_values=0)
                total_fixed += 1
            elif num_points > NUM_KEYPOINTS:
                print(f"üîß Nh√£n {label_path} c√≥ d∆∞ {num_points - NUM_KEYPOINTS} gi√° tr·ªã. C·∫Øt b·ªõt...")
                keypoints = keypoints[:NUM_KEYPOINTS]
                total_fixed += 1

            # Ghi ƒë√® l·∫°i file nh√£n ƒë√£ s·ª≠a
            np.savetxt(label_path, keypoints.reshape(-1, 2), fmt="%.6f")
        
        except Exception as e:
            print(f"‚ùå L·ªói ƒë·ªçc file nh√£n {label_path}: {e}")

    print(f"\n‚úÖ ƒê√£ s·ª≠a {total_fixed} file nh√£n l·ªói!")

# Ch·∫°y ki·ªÉm tra v√† s·ª≠a l·ªói
fix_labels()
